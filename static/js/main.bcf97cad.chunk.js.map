{"version":3,"sources":["features/stock/Stock.module.scss","components/ActionLink/ActionLink.module.scss","features/stock/stockSlice.js","api/index.js","components/Select.js","components/Clickable.js","components/Button/Button.js","components/ActionLink/ActionLink.js","components/InputField/InputField.js","assets/dollar.svg","assets/calendar.svg","assets/one.svg","features/stock/SingleStock.js","assets/money-graph-with-up-arrow.svg","features/stock/Stock.js","App.js","features/counter/counterSlice.js","app/rootReducer.js","app/store.js","index.js"],"names":["module","exports","stockSlice","createSlice","name","initialState","reducers","addStock","state","action","payload","removeStock","addTransaction","stock","push","transaction","removeTransaction","splice","index","actions","fetchCurrencyData","date","a","fetch","response","json","result","Select","label","value","onValueSelected","options","className","props","FormControl","fullWidth","variant","InputLabel","onChange","e","target","map","option","MenuItem","classnames","Clickable","href","children","type","Button","theme","disabled","ActionLink","styles","actionLink","InputField","placeholder","icon","isMandatory","background","error","onEnter","useState","isActive","setIsActive","htmlId","useMemo","uuid","cn","htmlFor","active","style","src","alt","onFocus","onBlur","id","onKeyPress","charCode","TRANSACTION_INITIAL_STATE","count","price","dateToAPIDate","split","month","day","year","dateToNapDate","SingleStock","stockName","dispatch","useDispatch","transactionList","useSelector","stockSummary","transactions","item","Number","priceBgn","realDate","Date","sort","t1","t2","taxSells","currentHolding","i","length","avgPrice","avgPriceBgn","taxBuyPrice","taxBuyPriceBgn","sell","current","selectStockSummary","setTransaction","onTransactionAdd","rates","BGN","title","onClick","toFixed","onRemoveTransaction","select","countIcon","inputFieldWrapper","dollarIcon","replace","dateIcon","Stock","stocks","stockValue","setStockValue","wrapper","stockIcon","stockList","Object","keys","App","counterSlice","increment","decrement","incrementByAmount","root","combineReducers","counter","persistConfig","key","storage","persistedReducer","persistReducer","store","configureStore","reducer","persistor","persistStore","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.bcf97cad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Stock_wrapper__fFEMu\",\"stockList\":\"Stock_stockList__3vrDF\",\"title\":\"Stock_title__S165Z\",\"transaction\":\"Stock_transaction__dYrjW\",\"select\":\"Stock_select__103TF\",\"inputFieldWrapper\":\"Stock_inputFieldWrapper__2fdue\",\"currentHolding\":\"Stock_currentHolding__2H0ZX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actionLink\":\"ActionLink_actionLink__3v4HY\"};","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const stockSlice = createSlice({\r\n  name: 'stock',\r\n  initialState: {},\r\n  reducers: {\r\n    addStock: (state, action) => {\r\n      state[action.payload] = [];\r\n    },\r\n    removeStock: (state, { payload }) => {\r\n      delete state[payload];\r\n    },\r\n    addTransaction: (state, { payload }) => {\r\n      state[payload.stock].push(payload.transaction);\r\n    },\r\n    removeTransaction: (state, { payload }) => {\r\n      state[payload.stock].splice(payload.index, 1);\r\n    }\r\n  },\r\n});\r\n\r\nexport const selectStockSummary = (state, stockName) => {\r\n  const transactions = state[stockName].map((item) => ({\r\n    ...item,\r\n    price: Number(item.price),\r\n    priceBgn: Number(item.priceBgn),\r\n    count: Number(item.count),\r\n    realDate: new Date(item.date)\r\n  })).sort((t1, t2) => (\r\n    t1.realDate < t2.realDate ? -1 : 1\r\n  ));\r\n\r\n  const taxSells = [];\r\n  let currentHolding = null;\r\n\r\n  let price = 0;\r\n  let priceBgn = 0;\r\n  let count = 0;\r\n\r\n  for (let i = 0; i < transactions.length; i += 1) {\r\n    if (transactions[i].type === 'buy') {\r\n      price += transactions[i].price;\r\n      priceBgn += transactions[i].priceBgn;\r\n      count += transactions[i].count;\r\n    }\r\n    if (transactions[i].type === 'sell') {\r\n      const avgPrice = price / count;\r\n      const avgPriceBgn = priceBgn / count;\r\n      const taxBuyPrice = avgPrice * transactions[i].count;\r\n      const taxBuyPriceBgn = avgPriceBgn * transactions[i].count;\r\n\r\n      taxSells.push({\r\n        avgPrice,\r\n        avgPriceBgn,\r\n        taxBuyPrice,\r\n        taxBuyPriceBgn,\r\n        sell: transactions[i]\r\n      });\r\n\r\n      count -= transactions[i].count;\r\n      price = avgPrice * count;\r\n      priceBgn = avgPriceBgn * count;\r\n    }\r\n  }\r\n\r\n  if (count > 0) {\r\n    const avgPrice = price / count;\r\n\r\n    currentHolding = {\r\n      avgPrice,\r\n      count,\r\n      current: true\r\n    };\r\n  }\r\n\r\n  return {\r\n    taxSells,\r\n    currentHolding\r\n  };\r\n};\r\n\r\nexport const { addStock, removeStock, addTransaction, removeTransaction } = stockSlice.actions;\r\n\r\nexport default stockSlice.reducer;\r\n","/**\n *\n * @param  {String}  date: YYYY-MM-DD, e.g. 2020-05-15\n * @return {Promise}\n */\nexport const fetchCurrencyData = async (date) => {\n  const response = await fetch(`https://api.exchangeratesapi.io/${date}?base=USD&symbols=BGN`);\n  const result = await response.json();\n  return result;\n};\n","import React from 'react';\nimport classnames from 'classnames';\nimport MaterialSelect from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\n\n/**\n * Represents a select with dropdown options component.\n *\n * @param {String}   label\n * @param {String}   value:\n * @param {Function} onValueSelected\n * @param {Array}    options: can be an array of either strings of { value: {String}, label: {String} }\n * @param {Array}    props\n */\nconst Select = ({ label, value = [], onValueSelected, options, className, ...props }) => (\n  <FormControl fullWidth variant=\"outlined\" className={className}>\n    <InputLabel>{label}</InputLabel>\n    <MaterialSelect\n      value={value}\n      onChange={(e) => { onValueSelected(e.target.value); }}\n      label={label}\n      {...props}\n    >\n      {options.map((option) => (\n        typeof option === 'string'\n          ? <MenuItem key={option} value={option} className={classnames({ 'main-option': option === '[ALL]' })}>{option}</MenuItem>\n          : <MenuItem key={option.value} value={option.value} className={classnames({ 'main-option': option === '[ALL]' })}>{option.label}</MenuItem>\n      ))}\n    </MaterialSelect>\n  </FormControl>\n);\n\nexport default Select;\n","import React from 'react';\n\n/**\n * Generates a clickable element - <a> or <button> depending on whether the href prop is defined.\n *\n * @param {String} href\n * @param {React.Component} children\n * @param props\n */\nconst Clickable = ({ href, children, ...props }) => (\n  href\n    ? <a href={href} {...props}>{children}</a>\n    : <button type=\"button\" {...props}>{children}</button>\n);\n\nexport default Clickable;\n","import React from 'react';\nimport Clickable from 'components/Clickable';\nimport './Button.scss';\n\n/**\n * The corporate button.\n *\n * @param {String}  label\n * @param {String}  theme: default (secondary), login, primary\n * @param {String}  className\n * @param {Boolean} disabled\n * @param           props: the rest of the props passed to the <button>\n */\nconst Button = ({ label, theme = 'default', className = '', disabled = false, ...props }) => (\n  <Clickable disabled={disabled} className={`brand-button ${theme} ${className}`} {...props}>\n    <div>{label}</div>\n  </Clickable>\n);\n\nexport default Button;\n","import React from 'react';\nimport styles from './ActionLink.module.scss';\n\nconst ActionLink = ({ label, ...props }) => (\n  <button type=\"button\" className={styles.actionLink} {...props}>{label}</button>\n);\n\nexport default ActionLink;\n","import React, { useState, useMemo } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport cn from 'classnames';\nimport './InputField.scss';\n\nconst ENTER_CODE = 13;\n\n/**\n * Represents an input field.\n *\n * @param {String}  type: html type attribute\n * @param {String}  label: optional label displayed on top of the field\n * @param {String}  placeholder: input placeholder\n * @param {SVG}     icon: icon displayed on the left of the input (email, password, etc.)\n * @param {Boolean} isMandatory: when true, displays an * symbil next to the label\n * @param {String}  background\n * @param {String}  error: when provided, displays the error state of the component and the error message\n * @param           props: rest of props passed to the <input />\n */\nconst InputField = ({ type = 'text', label, placeholder = '', icon, isMandatory = true, className, background, error, onEnter, ...props }) => {\n  const [isActive, setIsActive] = useState(false);\n\n  const htmlId = useMemo(() => (\n    uuid()\n  ), []);\n\n  const onFocus = () => {\n    setIsActive(true);\n  };\n\n  const onBlur = () => {\n    setIsActive(false);\n  };\n\n  const onKeyPress = (e) => {\n    e.charCode === ENTER_CODE && onEnter && onEnter();\n  };\n\n  return (\n    <div className={cn('input-field-wrapper', { error, [className]: className })}>\n      {label && (\n        <label htmlFor={htmlId}>\n          {label}\n          {isMandatory && (\n            <span className=\"mandatory-indicator\"> *</span>\n          )}\n        </label>\n      )}\n\n      <div className={cn('input-field', { active: isActive })}>\n        <div className=\"icon\">\n          <div className=\"inner-icon\" style={{ background }}>\n            <img src={icon} alt=\"\" />\n          </div>\n        </div>\n        <div className=\"field\">\n          <div className=\"inner-field\">\n            <input\n              type={type}\n              placeholder={placeholder}\n              onFocus={onFocus}\n              onBlur={onBlur}\n              id={htmlId}\n              onKeyPress={onKeyPress}\n              style={{\n                background\n              }}\n              {...props}\n            />\n          </div>\n        </div>\n      </div>\n\n      {error && (\n        <div className=\"error-message\">{error}</div>\n      )}\n    </div>\n  );\n};\n\nexport default InputField;\n","export default __webpack_public_path__ + \"static/media/dollar.749051ca.svg\";","export default __webpack_public_path__ + \"static/media/calendar.27a21ffb.svg\";","export default __webpack_public_path__ + \"static/media/one.d8e6104f.svg\";","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchCurrencyData } from 'api';\nimport { addTransaction, removeStock, removeTransaction, selectStockSummary } from './stockSlice';\nimport Select from 'components/Select';\nimport Button from 'components/Button/Button';\nimport ActionLink from 'components/ActionLink/ActionLink';\nimport InputField from 'components/InputField/InputField';\nimport dollarIcon from 'assets/dollar.svg';\nimport dateIcon from 'assets/calendar.svg';\nimport countIcon from 'assets/one.svg';\nimport styles from './Stock.module.scss';\n\nconst TRANSACTION_INITIAL_STATE = {\n  type: 'buy',\n  count: '',\n  price: '',\n  date: '',\n};\n\nconst dateToAPIDate = (date) => {\n  const [month, day, year] = date.split('/');\n  return `${year}-${month}-${day}`;\n};\n\nconst dateToNapDate = (date) => {\n  const [month, day, year] = date.split('/');\n  return `${day}.${month}.${year}`;\n};\n\nconst SingleStock = ({ stockName }) => {\n  const dispatch = useDispatch();\n  const transactionList = useSelector((state) => state.stock[stockName]);\n  const stockSummary = useSelector((state) => selectStockSummary(state.stock, stockName));\n\n  const [transaction, setTransaction] = useState(TRANSACTION_INITIAL_STATE);\n\n  const onTransactionAdd = async () => {\n    if (!transaction.date || !transaction.price || !transaction.count) {\n      return;\n    }\n\n    const { rates } = await fetchCurrencyData(dateToAPIDate(transaction.date));\n\n    dispatch(addTransaction({\n      stock: stockName,\n      transaction: {\n        ...transaction,\n        priceBgn: transaction.price * rates.BGN\n      }\n    }));\n\n    setTransaction(TRANSACTION_INITIAL_STATE);\n  };\n\n  const onRemoveStock = () => {\n    dispatch(removeStock(stockName));\n  };\n\n  const onRemoveTransaction = (index) => {\n    dispatch(removeTransaction({\n      stock: stockName,\n      index\n    }));\n  };\n\n  return (\n    <li>\n      <div className={styles.title}>\n        {stockName}\n\n        <ActionLink\n          label=\"Remove\"\n          onClick={onRemoveStock}\n        />\n      </div>\n\n      {transactionList.length > 0 && (\n        <>\n          <h2>Транзакции:</h2>\n\n          <table>\n            <tbody>\n              {transactionList.map((item, index) => (\n                <tr key={item.date}>\n                  <td>{item.type}</td>\n                  <td>{item.date}</td>\n                  <td>${item.price}</td>\n                  <td>{item.priceBgn.toFixed(2)} лв.</td>\n                  <td>{item.count} stocks</td>\n                  <td><ActionLink label=\"Remove\" onClick={() => { onRemoveTransaction(index); }} /></td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </>\n      )}\n\n      {stockSummary.taxSells.length > 0 && (\n        <>\n          <h2>За деклариране в Приложение 5 на НАП (продажба на акции):</h2>\n\n          <table>\n            <thead>\n              <tr>\n                <th>дата</th>\n                <th>Продажна цена</th>\n                <th>(USD)</th>\n                <th>Цена на придобиване</th>\n                <th>(USD)</th>\n                <th>(Средна цена на акция)</th>\n              </tr>\n            </thead>\n            <tbody>\n              {stockSummary.taxSells.map((item) => (\n                <tr key={item.sell.date}>\n                  <td><strong>{dateToNapDate(item.sell.date)}</strong></td>\n                  <td><strong>{item.sell.priceBgn.toFixed(2)}</strong></td>\n                  <td>{item.sell.price.toFixed(2)}</td>\n                  <td><strong>{item.taxBuyPriceBgn.toFixed(2)}</strong></td>\n                  <td>{item.taxBuyPrice.toFixed(2)}</td>\n                  <td>${item.avgPrice.toFixed(2)} [{item.avgPriceBgn.toFixed(2)} лв.]</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </>\n      )}\n\n      {stockSummary.currentHolding && (\n        <>\n          <h2>Притежавани в момента:</h2>\n          <div className={styles.currentHolding}>\n            Текуща средна цена: <strong>{stockSummary.currentHolding.avgPrice.toFixed(2)}</strong>, Текущ брой дялове: <strong>{stockSummary.currentHolding.count}</strong>\n          </div>\n        </>\n      )}\n\n      <div className={styles.transaction}>\n        <Select\n          className={styles.select}\n          label=\"buy / sell\"\n          onValueSelected={(value) => { setTransaction((state) => ({ ...state, type: value })); }}\n          value={transaction.type}\n          options={[\n            {\n              value: 'buy',\n              label: 'buy'\n            },\n            {\n              value: 'sell',\n              label: 'sell'\n            }\n          ]}\n        />\n        <InputField\n          placeholder=\"Брой акции\"\n          icon={countIcon}\n          className={styles.inputFieldWrapper}\n          value={transaction.count}\n          onChange={(e) => { setTransaction((state) => ({ ...state, count: e.target.value })); }}\n        />\n        <InputField\n          placeholder={`[USD] Цена на ${transaction.type === 'buy' ? 'придобиване' : 'продажба'}`}\n          icon={dollarIcon}\n          className={styles.inputFieldWrapper}\n          value={transaction.price}\n          onChange={(e) => { setTransaction((state) => ({ ...state, price: e.target.value.replace(/,/g, '') })); }}\n        />\n        <InputField\n          placeholder=\"MM/DD/YYYY дата\"\n          icon={dateIcon}\n          className={styles.inputFieldWrapper}\n          value={transaction.date}\n          onChange={(e) => { setTransaction((state) => ({ ...state, date: e.target.value })); }}\n        />\n\n        <Button\n          label=\"Add\"\n          theme=\"primary\"\n          onClick={onTransactionAdd}\n        />\n      </div>\n    </li>\n  );\n};\n\nexport default SingleStock;\n","export default __webpack_public_path__ + \"static/media/money-graph-with-up-arrow.431dad77.svg\";","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addStock } from './stockSlice';\nimport SingleStock from './SingleStock';\nimport InputField from 'components/InputField/InputField';\nimport stockIcon from 'assets/money-graph-with-up-arrow.svg';\nimport styles from './Stock.module.scss';\n\nconst Stock = () => {\n  const dispatch = useDispatch();\n  const stocks = useSelector((state) => state.stock);\n  const [stockValue, setStockValue] = useState('');\n\n  const onStockAdd = () => {\n    dispatch(addStock(stockValue));\n    setStockValue('');\n  };\n\n  return (\n    <div className={styles.wrapper}>\n      <InputField\n        placeholder=\"Stock name\"\n        icon={stockIcon}\n        value={stockValue}\n        onChange={(e) => { setStockValue(e.target.value); }}\n        onEnter={onStockAdd}\n      />\n\n      <ul className={styles.stockList}>\n        {Object.keys(stocks).map((stockName) => (\n          <SingleStock stockName={stockName} key={stockName} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default Stock;\n","import React from 'react';\r\nimport Stock from './features/stock/Stock';\r\nimport './App.scss';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Stock />\r\n      <div className=\"attribution\">\r\n        <div>Icons made by <a href=\"https://www.freepik.com\" title=\"Freepik\">Freepik</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\r\n        <div>Icons made by <a href=\"https://www.flaticon.com/authors/google\" title=\"Google\">Google</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    increment: (state) => {\r\n      state.value += 1;\r\n    },\r\n    decrement: (state) => {\r\n      state.value -= 1;\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const incrementAsync = (amount) => (dispatch) => {\r\n  setTimeout(() => {\r\n    dispatch(incrementByAmount(amount));\r\n  }, 1000);\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectCount = (state) => state.counter.value;\r\n\r\nexport default counterSlice.reducer;\r\n","import { combineReducers } from 'redux';\nimport counter from 'features/counter/counterSlice';\nimport stock from 'features/stock/stockSlice';\n\nconst root = combineReducers({\n  counter,\n  stock\n});\n\nexport default root;\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport { persistStore, persistReducer } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport root from './rootReducer';\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, root);\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\n// persistor.purge();\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport App from './App';\r\nimport store, { persistor } from './app/store';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n      <App />\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}